{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.794c96edb98e11d2e547.hot-update.js","sources":["webpack:///./component/LogIn.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from 'next/link';\r\nimport axios from 'axios';\r\nimport Router, { useRouter } from 'next/router';\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nclass LogIn extends Component {\r\n\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    emptyFieldLogin: false,\r\n    isLoading: false\r\n  }\r\n\r\n  inputHandlerLogIn = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n  logInForm = (e) => {\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n    e.preventDefault();\r\n    let data = {}\r\n    data.email = this.state.email\r\n    data.password = this.state.password\r\n    // axios.post(\"https://api.for9a.com/u/login\", {},{\r\n    //   params:data\r\n    // }).then(res => {\r\n    //   console.log(\"reseq\", res)\r\n    // }).catch(err => {\r\n    //   console.log(err)\r\n    // })\r\n    if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n      axios.post(\"https://api.for9a.com/u/login\", data).then(res => {\r\n        console.log(res, \"ssssssssss\")\r\n        this.setState({\r\n          isLoading: false,\r\n          emptyFieldLogin: false\r\n        })\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    } else {\r\n      this.setState({\r\n        emptyFieldLogin: true,\r\n        isLoading: false,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"10%\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n          <Grid container justify=\"flex-start\">\r\n            <Grid item xs={12} sm={6} style={{ minHeight: \"50px\" }}>\r\n              {this.state.emptyFieldLogin &&\r\n                <div class=\"alert alert-info\" role=\"alert\" style={{ minHeight: \"50px\", margin: \"0px\", backgroundColor: \"#339eba\", color: \"#fff\",borderRadius:\"5px\" }}>\r\n                  <p style={{padding:\"16px 0px 0px 11px\"}}>\r\n                  الرجاء ادخال كامل الحقول للمتابعه\r\n                  </p>\r\n              </div>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n          <Typography component=\"h1\" variant=\"h4\" >\r\n            Log In\r\n            </Typography>\r\n          <Avatar style={{ marginTop: \"15px\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <form style={{ width: \"100%\", marginTop: \"15px\" }} noValidate>\r\n            <TextField\r\n              onChange={() => { this.inputHandlerLogIn(\"email\", event.target.value) }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              onChange={() => { this.inputHandlerLogIn(\"password\", event.target.value) }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              style={{ marginBottom: \"10px\" }}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              onClick={this.logInForm}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ backgroundColor: \"#eb751d\" }}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs style={{ marginTop: \"15px\" }}>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                  </Link>\r\n              </Grid>\r\n              <Grid item style={{ marginTop: \"15px\" }}>\r\n                <Link href=\"/index\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <Grid container justify=\"center\">\r\n            <Grid item style={{ marginTop: \"10px\" }}>\r\n              <ClipLoader color=\"#339eba\" loading={this.state.isLoading} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAGA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAahIA;AACA;AAkIA;;;;A","sourceRoot":""}